/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MyMDI;

import Helper.Auth;
import Helper.MsgBox;
import Models.ChuyenDe;
import Models.HocVien;
import Models.KhoaHoc;
import Models.NguoiHoc;
import NewDao.ChuyenDeDao;
import NewDao.HocVienDao;
import NewDao.KhoaHocDao;
import NewDao.NguoiHocDao;
import NewInterface.ChuyenDeInterface;
import NewInterface.HocVienInterface;
import NewInterface.KhoaHocInterface;
import NewInterface.NguoiHocInterface;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class HocVienJInternalFrame extends javax.swing.JInternalFrame {

    DefaultComboBoxModel modelChuyenDe;
    DefaultComboBoxModel modelKhoaHoc;
    DefaultTableModel modelTBHocVien;
    DefaultTableModel modelTBNH;
    ChuyenDeInterface chuyenDeDao;
    KhoaHocInterface khoaHocDao;
    HocVienInterface hocVienDao;
    NguoiHocInterface nguoiHocDao;
    int row = -1;

    public HocVienJInternalFrame() {
        initComponents();
        this.setTitle("Quan Lý Học Viên");
        chuyenDeDao = new ChuyenDeDao();
        khoaHocDao = new KhoaHocDao();
        hocVienDao = new HocVienDao();
        nguoiHocDao = new NguoiHocDao();
        modelTBNH = (DefaultTableModel) tblNguoiHoc.getModel();
        modelTBHocVien = (DefaultTableModel) tblHocVien.getModel();
        modelChuyenDe = (DefaultComboBoxModel) cbbChuyenDe.getModel();
        modelKhoaHoc = (DefaultComboBoxModel) cbbKhoahoc.getModel();
        this.fillToComboBoxChuyenDe();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        cbbChuyenDe = new javax.swing.JComboBox<>();
        jpnKhoahoc = new javax.swing.JPanel();
        cbbKhoahoc = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHocVien = new javax.swing.JTable();
        btnXoa = new javax.swing.JButton();
        btnCapNhapDiem = new javax.swing.JButton();

        setClosable(true);

        jPanel5.setBackground(new java.awt.Color(102, 153, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chuyên Đề", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        cbbChuyenDe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbChuyenDeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbChuyenDe, 0, 265, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cbbChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jpnKhoahoc.setBackground(new java.awt.Color(102, 153, 255));
        jpnKhoahoc.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Khóa Học", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        cbbKhoahoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbKhoahocItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpnKhoahocLayout = new javax.swing.GroupLayout(jpnKhoahoc);
        jpnKhoahoc.setLayout(jpnKhoahocLayout);
        jpnKhoahocLayout.setHorizontalGroup(
            jpnKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnKhoahocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbKhoahoc, 0, 265, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpnKhoahocLayout.setVerticalGroup(
            jpnKhoahocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cbbKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Người Học", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Tìm Kiếm");

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NH", "Họ Tên", "Giới Tính", "Ngày Sinh", "Điện Thoại", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNguoiHoc.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblNguoiHoc);

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThem.setText("Thêm Vào Khóa Học");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnThem)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Học Viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tblHocVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "TT", "Mã HV", "Mã NH", "Họ Tên", "Điểm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHocVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHocVienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblHocVien);

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnXoa.setText("Xóa Khỏi Khóa Học");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnCapNhapDiem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCapNhapDiem.setText("Cập Nhập Điểm");
        btnCapNhapDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhapDiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoa)
                .addGap(18, 18, 18)
                .addComponent(btnCapNhapDiem)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCapNhapDiem, btnXoa});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCapNhapDiem, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpnKhoahoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbChuyenDeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbChuyenDeItemStateChanged
        this.fillToComboBoxKhoaHoc();
    }//GEN-LAST:event_cbbChuyenDeItemStateChanged

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        this.addHocVien();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.removeHocVien();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnCapNhapDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhapDiemActionPerformed
        this.update();
    }//GEN-LAST:event_btnCapNhapDiemActionPerformed

    private void tblHocVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHocVienMouseClicked
        tblHocVien.getSelectedRow();
    }//GEN-LAST:event_tblHocVienMouseClicked

    private void cbbKhoahocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbKhoahocItemStateChanged
        this.fillToTableHocVien();
    }//GEN-LAST:event_cbbKhoahocItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhapDiem;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbChuyenDe;
    private javax.swing.JComboBox<String> cbbKhoahoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpnKhoahoc;
    private javax.swing.JTable tblHocVien;
    private javax.swing.JTable tblNguoiHoc;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void fillToComboBoxChuyenDe() {

        try {
            modelChuyenDe.removeAllElements();
            List<ChuyenDe> list = chuyenDeDao.getList();
            for (ChuyenDe cd : list) {
                modelChuyenDe.addElement(cd);
            }
            this.fillToComboBoxKhoaHoc();
        } catch (Exception ex) {
            ex.printStackTrace();
            MsgBox.alert(this, "Lỗi đổ dữ liệu CBB chuyên đề!");
        }
    }

    private void fillToComboBoxKhoaHoc() {
        modelKhoaHoc.removeAllElements();
        ChuyenDe chuyenDe = (ChuyenDe) cbbChuyenDe.getSelectedItem();
        if (chuyenDe != null) {
            try {
                List<KhoaHoc> list = khoaHocDao.selectByChuyenDe(chuyenDe.getMaCD());
                for (KhoaHoc kh : list) {
                    modelKhoaHoc.addElement(kh);
                }

                if (list.size() == 0) {
                    btnThem.setEnabled(false);

                } else {
                    this.fillToTableHocVien();
                    btnThem.setEnabled(true);
                }
            } catch (Exception ex) {
                MsgBox.alert(this, "Lỗi đổ dữ liệu vào CBB khóa học!");
                ex.printStackTrace();
            }
        }
    }

    private void fillToTableHocVien() {
        modelTBHocVien.setRowCount(0);
        KhoaHoc khoaHoc = (KhoaHoc) cbbKhoahoc.getSelectedItem();
        if (khoaHoc != null) {
            try {
                List<HocVien> list = hocVienDao.selectByKhoaHoc(khoaHoc.getMaKH());
                for (int i = 0; i < list.size(); i++) {
                    HocVien hv = list.get(i);
                    String hoTen = nguoiHocDao.selectByID(hv.getMaNH()).getHoTen();
                    modelTBHocVien.addRow(new Object[]{
                        i + 1,
                        hv.getMaHV(),
                        hv.getMaNH(),
                        hoTen,
                        hv.getDiem()
                    });
                }

                this.fillToTableNguoiHoc();

            } catch (Exception ex) {
                ex.printStackTrace();
                MsgBox.alert(this, "Lỗi đổ dữ liệu học viên!");
            }
            btnThem.setEnabled(true);
            btnCapNhapDiem.setEnabled(true);
            btnXoa.setEnabled(true);
        } else {
            btnThem.setEnabled(false);
            btnCapNhapDiem.setEnabled(false);
            btnXoa.setEnabled(false);
        }
    }

    private void fillToTableNguoiHoc() {
        try {
            modelTBNH.setRowCount(0);
            KhoaHoc khoaHoc = (KhoaHoc) cbbKhoahoc.getSelectedItem();
            String keyWord = txtSearch.getText();
            List<NguoiHoc> list = nguoiHocDao.selectNotinCourse(khoaHoc.getMaKH(), keyWord);
            for (NguoiHoc nh : list) {
                modelTBNH.addRow(new Object[]{
                    nh.getMaNH(),
                    nh.getHoTen(),
                    nh.isGioiTinh() ? "Nam" : "Nữ",
                    nh.getNgaySinh(),
                    nh.getDienThoai(),
                    nh.getEmail()
                });
            }
            btnXoa.setEnabled(false);
        } catch (Exception ex) {
            ex.printStackTrace();
            MsgBox.alert(this, "Lỗi đổ dữ người học! ");
        }
    }

    private void addHocVien() {
        KhoaHoc khoaHoc = (KhoaHoc) cbbKhoahoc.getSelectedItem();
        for (int row : tblNguoiHoc.getSelectedRows()) {
            try {
                HocVien hv = new HocVien();
                hv.setMaKH(khoaHoc.getMaKH());
                hv.setDiem(0);
                hv.setMaNH((String) tblNguoiHoc.getValueAt(row, 0));
                hocVienDao.insert(hv);
            } catch (Exception ex) {
                ex.printStackTrace();
                MsgBox.alert(this, "Lỗi add học viên!");
            }
        }
        this.fillToTableHocVien();
    }

    private void removeHocVien() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa học viên!");
            return;
        } else if (MsgBox.confirm(this, "Bạn có muốn xóa các học viên đã chọn không?")) {
            for (int row : tblHocVien.getSelectedRows()) {
                try {
                    int maHV = (int) tblHocVien.getValueAt(row, 1);
                    hocVienDao.delete(maHV);
                    MsgBox.alert(this, "Xóa thành công!");
                    this.fillToTableHocVien();
                } catch (Exception ex) {
                    ex.printStackTrace();
                    MsgBox.alert(this, "Lỗi delete hoc viên!");
                }
            }
        }
    }

    private void update() {
        for (int i = 0; i < tblHocVien.getRowCount(); i++) {
            try {
                int maHV = (int) tblHocVien.getValueAt(i, 1);
                HocVien hv = hocVienDao.selectById(maHV);
                hv.setDiem(Double.parseDouble(tblHocVien.getValueAt(i, 4).toString()));
                hocVienDao.update(hv);

            } catch (Exception ex) {
                ex.printStackTrace();
                MsgBox.alert(this, "Cập nhập điểm thất bại");
            }

        }
        this.fillToTableHocVien();
        MsgBox.alert(this, "Cập nhập điểm thành công!");
    }

    void button() {

    }
}
